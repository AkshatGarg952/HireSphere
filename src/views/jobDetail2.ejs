<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JobHunt - Recruiter Page</title>
    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <style>
        /* Global Styles */
    :root {
        --primary-color: #8a2be2;
        --secondary-color: #ff6f00;
        --accent-color: #00bcd4;
        --light-color: #f8f9fa;
        --dark-color: #333333;
        --success-color: #28a745;
        --warning-color: #ffc107;
        --danger-color: #dc3545;
        --border-radius: 8px;
        --box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease;
    }
    
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    body {
        background-color: var(--light-color);
        color: var(--dark-color);
        line-height: 1.6;
    }
    
    a {
        text-decoration: none;
        color: inherit;
    }
    
    button {
        cursor: pointer;
        border: none;
        outline: none;
    }
    
    /* Navbar Styles */
    .navbar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 5%;
        background-color: white;
        box-shadow: var(--box-shadow);
        position: sticky;
        top: 0;
        z-index: 100;
    }
    
    .logo h1 {
        font-size: 1.8rem;
        font-weight: 700;
    }
    
    .primary-text {
        color: var(--primary-color);
    }
    
    .secondary-text {
        color: var(--secondary-color);
    }
    
    .nav-links {
        display: flex;
        align-items: center;
        gap: 1.5rem;
        font-size: 1.3rem;
    }
    
    .nav-links a {
        color: var(--dark-color);
        font-weight: 500;
        padding: 0.5rem 0;
        position: relative;
        transition: var(--transition);
    }
    
    .nav-links a:hover, .nav-links a.active {
        color: var(--primary-color);
    }
    
    .nav-links a.active::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 2px;
        background-color: var(--primary-color);
    }
    
    .search-container {
        display: flex;
        align-items: center;
        position: relative;
        font-size: 1.5rem;
    }
    
    .search-container input {
        padding: 0.5rem 1rem;
        border-radius: var(--border-radius);
        border: 1px solid #ddd;
        width: 200px;
        font-size: 0.9rem;
    }
    
    .search-btn {
        position: absolute;
        right: 10px;
        background: none;
        color: #777;
        font-size: 1.5rem;
    }
    
    .post-job-btn, .logout-btn {
        padding: 0.5rem 1rem;
        border-radius: var(--border-radius);
        font-weight: 500;
        transition: var(--transition);
    }
    
    .post-job-btn {
        background-color: var(--primary-color);
        color: white;
        font-size: 1.1rem;
    }
    
    .post-job-btn:hover {
        background-color: #7928c9;
    }
    
    .logout-btn {
        background-color: transparent;
        color: var(--dark-color);
        border: 1px solid #ddd;
        font-size: 1.3rem;
    }
    
    .logout-btn:hover {
        background-color: #f1f1f1;
    }
    
    .menu-toggle {
        display: none;
        font-size: 1.5rem;
        cursor: pointer;
    }
    
  
    
   
    
    /* Modal Styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 200;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
    }
    
    .modal-content {
        background-color: white;
        margin: 5% auto;
        padding: 2rem;
        border-radius: var(--border-radius);
        width: 90%;
        max-width: 600px;
        position: relative;
        animation: modalFadeIn 0.3s;
    }
    
    @keyframes modalFadeIn {
        from {
            opacity: 0;
            transform: translateY(-50px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    .close {
        position: absolute;
        right: 1.5rem;
        top: 1rem;
        font-size: 1.5rem;
        cursor: pointer;
    }
    
    .modal-content h2 {
        margin-bottom: 1.5rem;
        color: var(--dark-color);
    }
    
    .form-group {
        margin-bottom: 1.2rem;
    }
    
    .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: var(--dark-color);
    }
    
    .form-group input, .form-group select, .form-group textarea {
        width: 100%;
        padding: 0.8rem;
        border-radius: var(--border-radius);
        border: 1px solid #ddd;
        font-size: 1rem;
    }
    
    .form-group textarea {
        resize: vertical;
    }
    
    .submit-btn {
        width: 100%;
        padding: 0.8rem;
        background-color: var(--primary-color);
        color: white;
        border-radius: var(--border-radius);
        font-weight: 500;
        font-size: 1rem;
        margin-top: 1rem;
        transition: var(--transition);
    }
    
    .submit-btn:hover {
        background-color: #7928c9;
    }

    /* Container styles */
    .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem 1rem;
        }

        /* Page header */
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .page-title {
            font-size: 1.5rem;
            font-weight: bold;
            color: #111827;
        }

        .action-buttons {
            display: flex;
            gap: 0.75rem;
        }

        /* Card styles */
        .card {
            background-color: white;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .card:hover {
            transform: translateY(-4px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }

        .card-body {
            padding: 1.5rem;
        }

        /* Grid layout */
        .grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }

        @media (min-width: 768px) {
            .grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        /* Form field styles */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group:last-child {
            margin-bottom: 0;
        }

        .form-label {
            display: block;
            font-size: 0.875rem;
            font-weight: 500;
            color: #6b7280;
            margin-bottom: 0.25rem;
        }

        .form-control {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #d1d5db;
            border-radius: 0.375rem;
            box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            font-size: 0.875rem;
        }

        textarea.form-control {
            min-height: 100px;
            resize: vertical;
        }

        .form-value {
            margin-top: 0.25rem;
            font-size: 0.875rem;
            color: #111827;
        }

        .form-value.title {
            font-size: 1.25rem;
            font-weight: 600;
        }

        /* Skills tags */
        .tags-container {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-top: 0.5rem;
        }

        .tag {
            background-color: #f3e8ff;
            color: #6b21a8;
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
        }

        .tag-remove {
            margin-left: 0.25rem;
            cursor: pointer;
            font-weight: bold;
        }

        .skills-input-group {
            display: flex;
            margin-top: 0.5rem;
        }

        .skills-input {
            flex-grow: 1;
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }

        .skills-add-btn {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }

        /* Progress bar */
        .progress-container {
            margin-top: 1.5rem;
        }

        .progress-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.5rem;
        }

        .progress-label {
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            background-color: #f3e8ff;
            color: #9333ea;
            padding: 0.25rem 0.5rem;
            border-radius: 9999px;
        }

        .progress-value {
            font-size: 0.75rem;
            font-weight: 600;
            color: #9333ea;
        }

        .progress-bar-bg {
            background-color: #f3e8ff;
            border-radius: 0.25rem;
            height: 0.5rem;
            overflow: hidden;
        }

        .progress-bar {
            height: 100%;
            background-color: #9333ea;
            transition: width 0.5s ease-in-out;
        }

        /* Footer */
        .card-footer {
            padding: 1.5rem;
            border-top: 1px solid #e5e7eb;
            display: flex;
            justify-content: flex-end;
            gap: 0.75rem;
        }

        /* Grid for 2-column layout */
        .grid-2 {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1.5rem;
        }

        /* Animation */
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .animate-fade-in {
            animation: fadeIn 0.3s ease-in-out;
        }
    
    /* Footer Styles */
    footer {
        background-color: white;
        padding: 3rem 5% 1rem;
        margin-top: 3rem;
        border-top: 1px solid #eee;
    }
    
    .footer-content {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        gap: 2rem;
        margin-bottom: 2rem;
    }
    
    .footer-logo h2 {
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
    }
    
    .footer-logo p {
        color: #666;
        max-width: 300px;
    }
    
    .footer-links {
        display: flex;
        gap: 3rem;
        flex-wrap: wrap;
    }
    
    .footer-links-column h3 {
        font-size: 1.1rem;
        margin-bottom: 1rem;
        color: var(--dark-color);
    }
    
    .footer-links-column a {
        display: block;
        color: #666;
        margin-bottom: 0.7rem;
        transition: var(--transition);
    }
    
    .footer-links-column a:hover {
        color: var(--primary-color);
    }
    
    .footer-bottom {
        text-align: center;
        padding-top: 1rem;
        border-top: 1px solid #eee;
        color: #666;
        font-size: 0.9rem;
    }
    
    /* Media Queries */
    @media (max-width: 1024px) {
        .stats-container {
            grid-template-columns: repeat(2, 1fr);
        }
    }
    
    @media (max-width: 768px) {
        .navbar {
            padding: 1rem;
        }
    
        .nav-links {
            position: fixed;
            top: 70px;
            left: -100%;
            background-color: white;
            width: 100%;
            height: calc(100vh - 70px);
            flex-direction: column;
            align-items: flex-start;
            padding: 2rem;
            transition: var(--transition);
            box-shadow: var(--box-shadow);
        }
    
        .nav-links.active {
            left: 0;
        }
    
        .menu-toggle {
            display: block;
        }
    
        .search-container {
            width: 100%;
        }
    
        .search-container input {
            width: 100%;
        }
    
        .post-job-btn, .logout-btn {
            width: 100%;
        }
    
        .jobs-grid {
            grid-template-columns: 1fr;
        }
    
        .footer-content {
            flex-direction: column;
            gap: 1.5rem;
        }
    
        .footer-links {
            flex-direction: column;
            gap: 1.5rem;
        }
    }
    
    @media (max-width: 480px) {
        .stats-container {
            grid-template-columns: 1fr;
        }
    
        .jobs-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }
    
        .filter-sort {
            width: 100%;
        }
    
        .filter-sort select {
            width: 100%;
        }
    }


    .btn {
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            font-weight: 500;
            cursor: pointer;
            border: none;
            transition: all 0.2s ease;
        }
    </style>


</head>
<body>
    <nav class="navbar">
        <div class="logo">
            <h1><span class="primary-text">Job</span><span class="secondary-text">Hunt</span></h1>
        </div>
        <div class="nav-links">
            <a href="/?userId=<%=recruiterId%>" class="active">Home</a>
            <a href='/api/recruiters/recruiterPage?recruiterId=<%=recruiterId%>'>Jobs</a>
            <a href='/api/recruiters/dashboard?recruiterId=<%=recruiterId%>'>Dashboard</a>
            <div class="search-container">
                <input type="text" placeholder="Search jobs...">
                <button class="search-btn"><i class="fas fa-search"></i></button>
            </div>
            <button class="post-job-btn">Post New Job</button>
            <button class="logout-btn">Logout</button>
        </div>
        <div class="menu-toggle">
            <i class="fas fa-bars"></i>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container">
        <div class="page-header">
            <h1 class="page-title">Job Details</h1>
            <div class="action-buttons">
                <button id="updateBtn" class="btn btn-primary">Update Job</button>
                <button id="deleteBtn" class="btn btn-danger">Delete Job</button>
            </div>
        </div>

        <div class="card animate-fade-in">
            <div class="card-body">
                <form id="jobForm">
                    <div class="grid">
                        <!-- Left Column -->
                        <div>
                            <div class="form-group">
                                <label class="form-label">Title</label>
                                <div id="titleDisplay" class="form-value title"><%= job.title %></div>
                                <input type="text" id="titleInput" class="form-control" value="Full stack Developer" style="display: none;">
                            </div>

                            <div class="form-group">
                                <label class="form-label">Role</label>
                                <div id="roleDisplay" class="form-value"><%= job.role %></div>
                                <input type="text" id="roleInput" class="form-control" value="Senior Developer" style="display: none;">
                            </div>

                            <div class="form-group">
                                <label class="form-label">Company</label>
                                <div id="companyDisplay" class="form-value"><%= job.company %></div>
                                <input type="text" id="companyInput" class="form-control" value="TechCorp Solutions" style="display: none;">
                            </div>

                            <div class="form-group">
                                <label class="form-label">Description</label>
                                <div id="descriptionDisplay" class="form-value"><%= job.description %></div>
                                <textarea id="descriptionInput" class="form-control" style="display: none;">We are looking for an experienced Full Stack Developer to join our dynamic team. The ideal candidate will have strong knowledge of front-end and back-end technologies, database management, and server architecture.</textarea>
                            </div>

                            <div class="form-group">
                                <label class="form-label">Skills Required</label>
                                <div id="skillsDisplay" class="tags-container">
                                    <% job.requirements.forEach(skill=>{ %>
                                        <span class="tag"><%= skill %></span>
                                   <% }) %>
                                    
                                </div>
                              
                            </div>
                        </div>

                        <!-- Right Column -->
                        <div>
                            <div class="grid-2">
                                <div class="form-group">
                                    <label class="form-label">Category</label>
                                    <div id="categoryDisplay" class="form-value"><%= job.category %></div>
                                    <input type="text" id="categoryInput" class="form-control" value="Tech" style="display: none;">
                                </div>

                                <div class="form-group">
                                    <label class="form-label">Type</label>
                                    <div id="typeDisplay" class="form-value"><%= job.type %></div>
                                    <select id="typeInput" class="form-control" style="display: none;">
                                        <option value="Remote">Remote</option>
                                        <option value="Onsite">Onsite</option>
                                        <option value="Hybrid">Hybrid</option>
                                    </select>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="form-label">Salary (LPA)</label>
                                <div id="salaryDisplay" class="form-value">₹ <%= job.salary %></div>
                                <input type="text" id="salaryInput" class="form-control" value="69-70" style="display: none;">
                               
                            </div>

                            <div class="form-group">
                                <label class="form-label">Location</label>
                                <div id="locationDisplay" class="form-value"><%= job.location %></div>
                                <input type="text" id="locationInput" class="form-control" value="Ballabgarh, Neher Paar" style="display: none;">
                                
                            </div>

                            <div class="grid-2">
                                <div class="form-group">
                                    <label class="form-label">Max Candidates</label>
                                    <div id="maxCandidatesDisplay" class="form-value"><%= job.maxCandidates%></div>
                                    <input type="number" id="maxCandidatesInput" class="form-control" value="5" style="display: none;">
                                </div>

                                <div class="form-group">
                                    <label class="form-label">Current Applications</label>
                                    <div id="currentApplicationsDisplay" class="form-value"><%= job.applicants.length %></div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="form-label">Posted Date</label>
                                <div id="postedDateDisplay" class="form-value"><%= job.createdAt %></div>
                            </div>

                            <!-- <div class="progress-container">
                                <div class="progress-header">
                                    <span class="progress-label">Applications</span>
                                    <span class="progress-value">2/5</span>
                                </div>
                                <div class="progress-bar-bg">
                                    <div class="progress-bar" style="width: 40%"></div>
                                </div>
                            </div> -->
                        </div>
                    </div>
                </form>
            </div>
            <div class="card-footer">
                <button class="btn btn-secondary">Back to Jobs</button>
                <!-- <button class="btn btn-primary">View Applications</button> -->
            </div>
        </div>
    </div>


    <!-- form -->

    <div id="jobModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Post a New Job</h2>
            <form id="jobForm" action="/api/jobs/add/<%=recruiterId%>" method="POST">
                <div class="form-group">
                    <label for="jobTitle">Job Title</label>
                    <input type="text" id="jobTitle" name="title" required>
                </div>
                <div class="form-group">
                    <label for="jobRole">Role</label>
                    <input type="text" id="jobRole" name="role" placeholder="e.g. React Developer" required>
                </div>
                <div class="form-group">
                    <label for="Company">Company</label>
                    <input type="text" id="Company" name="company" required>
                </div>
                <div class="form-group">
                    <label for="jobCategory">Category</label>
                    <input type="text" id="jobCategory" name="category" required>
                </div>
    
                <div class="form-group">
                    <label for="jobLocation">Location</label>
                    <input type="text" id="jobLocation" name="location" placeholder="e.g. Bangalore IND" required>
                </div>
                <div class="form-group">
                    <label for="maxCandidates">Maximum Candidates</label>
                    <input type="number" id="maxCandidates" name="maxCandidates" placeholder="10" required>
                </div>
                <div class="form-group">
                    <label for="jobType">Job Type</label>
                    <select id="jobType" name="type" required>
                        <option value="">Select Job Type</option>
                        <option value="Remote">Remote</option>
                        <option value="On-Site">On-Site</option>
                        <option value="Hybrid">Hybrid</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="jobSalary">Salary Range (LPA)</label>
                    <input type="text" id="jobSalary" name="salary" placeholder="e.g. 10-15" required>
                </div>
                <div class="form-group">
                    <label for="jobSkills">Skills (comma separated)</label>
                    <input type="text" id="jobSkills" name="requirements" placeholder="e.g. REACT, NODEJS, JS" required>
                </div>
                <div class="form-group">
                    <label for="jobDescription">Description</label>
                    <textarea id="jobDescription" rows="5" name="description"  required></textarea>
                </div>
                
                <button type="submit" class="submit-btn">Post Job</button>
            </form>
        </div>
    </div>


    <footer>
        <div class="footer-content">
            <div class="footer-logo">
                <h2><span class="primary-text">Job</span><span class="secondary-text">Hunt</span></h2>
                <p>Find the perfect talent for your company</p>
            </div>
            <div class="footer-links">
                <div class="footer-links-column">
                    <h3>For Recruiters</h3>
                    <a href="#">Post a Job</a>
                    <a href="#">Find Candidates</a>
                    <a href="#">Pricing</a>
                </div>
                <div class="footer-links-column">
                    <h3>For Job Seekers</h3>
                    <a href="#">Browse Jobs</a>
                    <a href="#">Career Advice</a>
                    <a href="#">Resume Builder</a>
                </div>
                <div class="footer-links-column">
                    <h3>Company</h3>
                    <a href="#">About Us</a>
                    <a href="#">Contact Us</a>
                    <a href="#">Privacy Policy</a>
                </div>
            </div>
        </div>
        <div class="footer-bottom">
            <p>&copy; 2025 JobHunt. All rights reserved.</p>
        </div>
    </footer>

    <script>
        // DOM Elements
const menuToggle = document.querySelector('.menu-toggle');
const navLinks = document.querySelector('.nav-links');
const postJobBtn = document.querySelector('.post-job-btn');
const jobModal = document.getElementById('jobModal');
const closeBtn = document.querySelector('.close');
const jobForm = document.getElementById('jobForm');

// Toggle mobile menu
menuToggle.addEventListener('click', () => {
    navLinks.classList.toggle('active');
    
    // Update icon
    if (navLinks.classList.contains('active')) {
        menuToggle.innerHTML = '<i class="fas fa-times"></i>';
    } else {
        menuToggle.innerHTML = '<i class="fas fa-bars"></i>';
    }
});

// Open job modal
postJobBtn.addEventListener('click', () => {
    jobModal.style.display = 'block';
    document.body.style.overflow = 'hidden'; // Prevent scrolling
});

// Close modal when clicking on close button
closeBtn.addEventListener('click', () => {
    jobModal.style.display = 'none';
    document.body.style.overflow = 'auto'; // Re-enable scrolling
});

// Close modal when clicking outside the modal content
window.addEventListener('click', (e) => {
    if (e.target === jobModal) {
        jobModal.style.display = 'none';
        document.body.style.overflow = 'auto'; // Re-enable scrolling
    }
});


document.addEventListener("DOMContentLoaded", () => {
        const updateBtn = document.getElementById("updateBtn");
        const deleteBtn = document.getElementById("deleteBtn");

        const jobId = "<%= job._id %>";
        const recruiter = "<%= recruiterId %>";

        
        const displayElements = document.querySelectorAll('[id$="Display"]');
    const inputElements = document.querySelectorAll('[id$="Input"]');
    
    let isEditMode = false;
    
    updateBtn.addEventListener("click", () => {
        if (!isEditMode) {
            // Switch to edit mode
            displayElements.forEach(el => {
                const inputId = el.id.replace('Display', 'Input');
                const inputEl = document.getElementById(inputId);
                
                if (inputEl) {
                    // Set input value based on display content
                    if (el.id === 'salaryDisplay') {
                        // Remove the currency symbol (₹) for salary
                        inputEl.value = el.textContent.replace('₹', '').trim();
                    } else {
                        inputEl.value = el.textContent.trim();
                    }
                    
                    // Hide display and show input
                    el.style.display = 'none';
                    inputEl.style.display = 'block';
                }
            });
            
            // Handle skills separately
            const skillsDisplay = document.getElementById('skillsDisplay');
            skillsDisplay.style.display = 'none';
            
            // Create skills input if it doesn't exist
            if (!document.getElementById('skillsInput')) {
                const skillsContainer = skillsDisplay.parentElement;
                const skillsInput = document.createElement('input');
                skillsInput.type = 'text';
                skillsInput.id = 'skillsInput';
                skillsInput.className = 'form-control';
                
                // Get skills from tags and join them
                const skillTags = document.querySelectorAll('#skillsDisplay .tag');
                const skills = Array.from(skillTags).map(tag => tag.textContent.trim()).join(', ');
                
                skillsInput.value = skills;
                skillsContainer.appendChild(skillsInput);
            } else {
                // If input already exists, update its value
                const skillsInput = document.getElementById('skillsInput');
                const skillTags = document.querySelectorAll('#skillsDisplay .tag');
                const skills = Array.from(skillTags).map(tag => tag.textContent.trim()).join(', ');
                
                skillsInput.value = skills;
                skillsInput.style.display = 'block';
            }
            
            // Change button text
            updateBtn.textContent = "Save Changes";
            isEditMode = true;
        } else {
            // Save changes
            saveChanges();
        }
    });
    
    function saveChanges() {
        // Collect form data
        const formData = {
            title: document.getElementById('titleInput').value,
            role: document.getElementById('roleInput').value,
            company: document.getElementById('companyInput').value,
            description: document.getElementById('descriptionInput').value,
            requirements: document.getElementById('skillsInput').value.split(',').map(skill => skill.trim()),
            category: document.getElementById('categoryInput').value,
            type: document.getElementById('typeInput').value,
            salary: document.getElementById('salaryInput').value,
            location: document.getElementById('locationInput').value,
            maxCandidates: document.getElementById('maxCandidatesInput').value
        };
        
        fetch(`/api/jobs/update/${jobId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData)
        })
        .then(response => {
            if (response.ok) {
                return response.json();
            }
            throw new Error('Network response was not ok');
        })
        .then(data => {
            alert('Job updated successfully!');

            document.getElementById('titleDisplay').textContent = formData.title;
            document.getElementById('roleDisplay').textContent = formData.role;
            document.getElementById('companyDisplay').textContent = formData.company;
            document.getElementById('descriptionDisplay').textContent = formData.description;
            document.getElementById('categoryDisplay').textContent = formData.category;
            document.getElementById('typeDisplay').textContent = formData.type;
            document.getElementById('salaryDisplay').textContent = '₹ ' + formData.salary;
            document.getElementById('locationDisplay').textContent = formData.location;
            document.getElementById('maxCandidatesDisplay').textContent = formData.maxCandidates;
            
            // Update skills tags
            const skillsDisplay = document.getElementById('skillsDisplay');
            skillsDisplay.innerHTML = '';
            formData.requirements.forEach(skill => {
                const tag = document.createElement('span');
                tag.className = 'tag';
                tag.textContent = skill;
                skillsDisplay.appendChild(tag);
            });
            
            // Switch back to display mode
            displayElements.forEach(el => el.style.display = 'block');
            inputElements.forEach(el => el.style.display = 'none');
            document.getElementById('skillsInput').style.display = 'none';
            skillsDisplay.style.display = 'flex';
            
            // Reset button text
            updateBtn.textContent = "Update Job";
            isEditMode = false;
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Failed to update job.');
        });
    }
        

        deleteBtn.addEventListener("click", async () => {
            
            const confirmDelete = confirm("Are you sure you want to delete this job?");
            if (confirmDelete) {
                const response = await fetch(`/api/jobs/delete/${jobId}`, {
                    method: "DELETE",
                });
           
                if (response.ok) {
                    alert("Job deleted successfully!");
                    window.location.href = `/api/recruiters/recruiterPage?recruiterId=${recruiter}`;
                } else {
                    alert("Failed to delete job.");
                }
            }
        });
    });


    document.addEventListener("DOMContentLoaded", () => {
    
    const backButton = document.querySelector('.card-footer .btn-secondary');
    const recruiterId = "<%= recruiterId %>";
    
    
    backButton.addEventListener('click', () => {
        
        window.location.href = `/api/recruiters/recruiterPage?recruiterId=${recruiterId}`;
    });
});

document.querySelector(".logout-btn").addEventListener("click", function () {
    window.location.href = "/api/recruiters/logout"; 
});
    </script>
</body>
</html>